//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// @@auth
/// @@allow('all', has(auth().role, 'admin'))
model SystemUser {
  id            String      @id() @default(cuid())
  name          String?
  email         String?     @unique()
  password      String?
  teste         String?
  emailVerified DateTime?
  image         String?
  role          String[]
  orcamento     Orcamento[]
}

model Cliente {
  id              Int            @id() @default(autoincrement())
  nome            String
  documento       String
  observacao      String?
  telefone        String?
  email           String?
  createdAt       DateTime?      @default(now())
  updatedAt       DateTime?      @updatedAt()
  deletedAt       DateTime?
  grupos          GrupoCliente[] @relation("ClienteGrupoCliente")
  ordensDeServico OrdemServico[]
  orcamentos      Orcamento[]
}

model OrdemServico {
  id           Int                @id() @default(autoincrement())
  clienteId    Int
  orcamentoId  Int?
  descricao    String
  dataInicio   DateTime?
  dataFim      DateTime?
  dataPrevista DateTime?
  valorTotal   Float?
  mes          String?            @db.Char(2)
  ano          String?            @db.Char(4)
  mesAno       String?            @db.Char(8)
  insertedAt   DateTime?          @default(now())
  updatedAt    DateTime?          @updatedAt()
  deletedAt    DateTime?
  cliente      Cliente            @relation(fields: [clienteId], references: [id])
  orcamento    Orcamento?         @relation(fields: [orcamentoId], references: [id])
  itens        OrdemServicoItem[]
}

model OrdemServicoItem {
  id             Int          @id() @default(autoincrement())
  ordemServicoId Int
  produtoId      Int
  quantidade     Float?
  desconto       Float?
  valor          Float?
  valorTotal     Float?
  ordemServico   OrdemServico @relation(fields: [ordemServicoId], references: [id])
  produto        Produto      @relation(fields: [produtoId], references: [id])
}

model Produto {
  id            Int                @id() @default(autoincrement())
  tipoProdutoId Int
  nome          String
  preco         Float
  obs           String?
  foto          String?
  insertedAt    DateTime?          @default(now())
  deletedAt     DateTime?
  updatedAt     DateTime?          @updatedAt()
  tipoProduto   TipoProduto        @relation(fields: [tipoProdutoId], references: [id])
  itens         OrdemServicoItem[]
}

model TipoProduto {
  id       Int       @id() @default(autoincrement())
  nome     String
  produtos Produto[]
}

model Orcamento {
  id           Int            @id() @default(autoincrement())
  clienteId    Int
  systemUserId String
  descricao    String
  valorTotal   Float?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt()
  deletedAt    DateTime?
  cliente      Cliente        @relation(fields: [clienteId], references: [id])
  systemUser   SystemUser     @relation(fields: [systemUserId], references: [id])
  ordemServico OrdemServico[]
}

model GrupoCliente {
  id       Int       @id() @default(autoincrement())
  nome     String
  clientes Cliente[] @relation("ClienteGrupoCliente")
}
